<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <OutputPath>..</OutputPath>
  </PropertyGroup>
  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)Lua.xml" />
    <AvailableItemName Include="LuaBinary">
      <Targets>Lua</Targets>
    </AvailableItemName>
  </ItemGroup>
  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)EmptyLua.xml" />
    <AvailableItemName Include="EmptyLuaBinary">
      <Targets>EmptyLua</Targets>
    </AvailableItemName>
  </ItemGroup>
  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)Serz.xml" />
    <AvailableItemName Include="SerzFile">
      <Targets>Serz</Targets>
    </AvailableItemName>
  </ItemGroup>
  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)Texture.xml" />
    <AvailableItemName Include="SerzTextureFile">
      <Targets>SerzTexture</Targets>
    </AvailableItemName>
  </ItemGroup>
  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)TexturePng.xml" />
    <AvailableItemName Include="TexturePng">
      <Targets>TexturePng</Targets>
    </AvailableItemName>
  </ItemGroup>
  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)Sound.xml" />
    <AvailableItemName Include="SoundFile">
      <Targets>Sound</Targets>
    </AvailableItemName>
  </ItemGroup>
  <ItemGroup>
    <LuaBinary Include="Mod\**\*.lua" />
    <EmptyLuaBinary Include="Mod\**\*.emptylua" />
    <LuaLibrary Include="Lib\**\*.lua" />
    <SerzFile Include="Mod\**\*.xml" />
    <SerzTextureFile Include="Mod\**\*.TgPcDx" />
    <TexturePng Include="Mod\**\*.png" />
    <SoundFile Include="Mod\**\*.wav" />
  </ItemGroup>
  <Target Name="Build" DependsOnTargets="Lua;EmptyLua;Serz;TexturePng;SerzTexture;Sound" />
  <Target Name="Lua" Inputs="@(LuaLibrary);%(LuaBinary.Identity)" Outputs="$(OutputPath)\%(LuaBinary.RelativeDir)%(LuaBinary.Filename).out">
    <MakeDir Directories="$(OutputPath)\%(LuaBinary.RelativeDir)" Condition="!Exists('$(OutputPath)\%(LuaBinary.RelativeDir)')" />
    <Exec Command="luacheck.exe --allow-defined-top --no-unused-args @(LuaLibrary->'&quot;%(Identity)&quot;', ' ') &quot;%(LuaBinary.Identity)&quot; --read-globals=Call SysCall" IgnoreExitCode="true" />
    <Exec Command="luac50.exe -s -o &quot;$(OutputPath)\%(LuaBinary.RelativeDir)%(LuaBinary.Filename).out&quot; @(LuaLibrary->'&quot;%(Identity)&quot;', ' ') &quot;%(LuaBinary.Identity)&quot;" />
  </Target>
  <Target Name="EmptyLua" Inputs="%(EmptyLuaBinary.Identity)" Outputs="$(OutputPath)\%(EmptyLuaBinary.RelativeDir)%(EmptyLuaBinary.Filename).out">
    <MakeDir Directories="$(OutputPath)\%(EmptyLuaBinary.RelativeDir)" Condition="!Exists('$(OutputPath)\%(EmptyLuaBinary.RelativeDir)')" />
    <Exec Command="copy NUL &quot;$(OutputPath)\%(EmptyLuaBinary.RelativeDir)%(EmptyLuaBinary.Filename).out&quot;" />
  </Target>
  <Target Name="Serz" Inputs="%(SerzFile.Identity)" Outputs="$(OutputPath)\%(SerzFile.RelativeDir)%(SerzFile.Filename).bin">
    <MakeDir Directories="$(OutputPath)\%(SerzFile.RelativeDir)" Condition="!Exists('$(OutputPath)\%(SerzFile.RelativeDir)')" />
    <Exec Command="serz.exe &quot;%(SerzFile.Identity)&quot; /xml:&quot;$(OutputPath)\%(SerzFile.RelativeDir)%(SerzFile.Filename).bin&quot;" />
  </Target>
  <Target Name="SerzTexture" Inputs="%(SerzTextureFile.Identity)" Outputs="$(OutputPath)\%(SerzTextureFile.Identity)">
    <Copy SourceFiles="%(SerzTextureFile.Identity)" DestinationFiles="$(OutputPath)\%(SerzTextureFile.Identity)" />
  </Target>
  <Target Name="TexturePng" Inputs="%(TexturePng.Identity)" Outputs="$(OutputPath)\%(TexturePng.RelativeDir)%(TexturePng.Filename).TgPcDx">
    <PropertyGroup>
      <AbsoluteOutputPath>$([System.IO.Path]::GetFullPath($(OutputPath)))</AbsoluteOutputPath>
    </PropertyGroup>
    <MakeDir Directories="$(OutputPath)\%(TexturePng.RelativeDir)" Condition="!Exists('$(OutputPath)\%(TexturePng.RelativeDir)')" />
    <Exec Command="compressonatorcli.exe -miplevels 5 -fd ARGB_8888 &quot;%(TexturePng.Identity)&quot; &quot;$(OutputPath)\%(TexturePng.RelativeDir)%(TexturePng.Filename).dds&quot;" />
    <Exec Command="ConvertToTg.exe -forcecompress -i &quot;$(AbsoluteOutputPath)\%(TexturePng.RelativeDir)%(TexturePng.Filename).dds&quot; -o &quot;$(AbsoluteOutputPath)\%(TexturePng.RelativeDir)%(TexturePng.Filename).TgPcDx&quot;" />
    <Delete Files="$(OutputPath)\%(TexturePng.RelativeDir)%(TexturePng.Filename).dds" />
  </Target>
  <Target Name="Sound" Inputs="%(SoundFile.Identity)" Outputs="$(OutputPath)\%(SoundFile.RelativeDir)%(SoundFile.Filename).dav">
    <MakeDir Directories="$(OutputPath)\%(SoundFile.RelativeDir)" Condition="!Exists('$(OutputPath)\%(SoundFile.RelativeDir)')" />
    <Exec Command="ConvertToDav.exe -i &quot;%(SoundFile.Identity)&quot; -o &quot;$(OutputPath)\%(SoundFile.RelativeDir)%(SoundFile.Filename).dav&quot;" />
  </Target>
</Project>